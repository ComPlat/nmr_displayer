name : Build and Deploy to Prod

on:
  push:
    branches: [main]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER_PROD: nmrxiv-prod
  GKE_ZONE: europe-west3-a
  DEPLOYMENT_NAME: nmrxiv-nmrium
  REPOSITORY_NAME_PROD: nmrxiv-prod
  IMAGE: nmrium

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run eslint
      - name: Run Prettier
        run: npm run prettier
      - name: Check types
        run: npm run check-types

  setup-build-publish-deploy-prod:
    name: deploy to prod
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure docker to use the gcloud command-line tool as a credential helper
    - run: |-
        gcloud auth configure-docker europe-west3-docker.pkg.dev
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.3.0
      with:
        cluster_name: ${{ env.GKE_CLUSTER_PROD }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build Image
      run: |-
        docker build -f Dockerfile.prod --tag europe-west3-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME_PROD/$IMAGE:latest .
    # Push the Docker image to Google Artifact Registry
    - name: Publish Image to Google Artifact Registry
      run: |-
        docker push "europe-west3-docker.pkg.dev/$PROJECT_ID/$REPOSITORY_NAME_PROD/$IMAGE:latest"

    # Deploy the latest Docker image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl rollout restart deployment/$DEPLOYMENT_NAME
        kubectl rollout status deployment/$DEPLOYMENT_NAME --timeout=300s
        kubectl get services -o wide
